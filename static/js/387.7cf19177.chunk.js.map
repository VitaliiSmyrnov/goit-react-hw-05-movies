{"version":3,"file":"static/js/387.7cf19177.chunk.js","mappings":"wQAEaA,E,QAAUC,GAAAA,GAAH,qI,SC2DpB,EAxDgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAcK,GAAd,WA0BA,OAxBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACfC,EAAWF,EAAXE,OAiBR,OAfA,iBAAC,2FACCL,EAAU,WADX,mBAIsBM,EAAAA,EAAAA,IAAkBC,OAAOb,GAAUW,GAJzD,OAISG,EAJT,OAKGV,EAAWU,GACXR,EAAU,YANb,gDAQsB,kBAAf,KAAMS,OACRR,EAAS,KAAMS,SACfV,EAAU,aAVf,wDAAD,GAeO,WACLG,EAAWQ,OACZ,CACF,GAAE,CAACjB,KAGF,UAACF,EAAD,WACc,YAAXO,IAAwB,8CAD3B,OAGGF,QAHH,IAGGA,OAHH,EAGGA,EAASe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACZ,2BACE,wBACE,oCAAYD,QAEd,uBAAIC,MAJGF,EADG,IASF,aAAXd,GAA4C,IAAnBF,EAAQmB,SAChC,oEAGU,aAAXjB,IACC,kGAMP,C,mMCxDDkB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAHc,mCAIdC,SAAU,SAGL,IAAMC,EAAsB,mCAAG,WAAMf,GAAN,uFACbY,EAAAA,EAAAA,IAAU,sBAAuB,CAAEZ,OAAAA,IADtB,cAC9BgB,EAD8B,yBAG7BA,EAASb,KAAKc,SAHe,2CAAH,sDAMtBC,EAAgB,mCAAG,WAAOC,EAAGnB,GAAV,uFACPY,EAAAA,EAAAA,IAAA,8BAAiCO,GAAK,CAAEnB,OAAAA,IADjC,cACxBgB,EADwB,yBAGvBA,EAASb,KAAKc,SAHS,2CAAH,wDAMhBG,EAAiB,mCAAG,WAAOZ,EAAIR,GAAX,uFACRY,EAAAA,EAAAA,IAAA,iBAAoBJ,GAAM,CAAER,OAAAA,IADpB,cACzBgB,EADyB,yBAGxBA,EAASb,MAHe,2CAAH,wDAMjBkB,EAAc,mCAAG,WAAOb,EAAIR,GAAX,uFACLY,EAAAA,EAAAA,IAAA,iBAAoBJ,EAApB,YAAkC,CAAER,OAAAA,IAD/B,cACtBgB,EADsB,yBAGrBA,EAASb,KAAKmB,MAHO,2CAAH,wDAMdrB,EAAiB,mCAAG,WAAOO,EAAIR,GAAX,uFACRY,EAAAA,EAAAA,IAAA,iBAAoBJ,EAApB,YAAkC,CAAER,OAAAA,IAD5B,cACzBgB,EADyB,yBAGxBA,EAASb,KAAKc,SAHU,2CAAH,uD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.ul`\n  margin-top: 10px;\n  padding-left: 20px;\n\n  p {\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieReviews } from 'services/Api';\nimport { Wrapper } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null); // eslint-disable-line\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const { signal } = controller;\n\n    (async () => {\n      setStatus('pending');\n\n      try {\n        const data = await fetchMovieReviews(Number(movieId), signal);\n        setReviews(data);\n        setStatus('resolved');\n      } catch (error) {\n        if (error.name !== 'CanceledError') {\n          setError(error.message);\n          setStatus('rejected');\n        }\n      }\n    })();\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <Wrapper>\n      {status === 'pending' && <p>Loading subpage...</p>}\n\n      {reviews?.map(({ id, author, content }) => (\n        <li key={id}>\n          <p>\n            <b>Author: {author}</b>\n          </p>\n          <p>{content}</p>\n        </li>\n      ))}\n\n      {status === 'resolved' && reviews.length === 0 && (\n        <p>We don't have any reviews for this movie</p>\n      )}\n\n      {status === 'rejected' && (\n        <p>\n          Oops, something went wrong. Please, reload the subpage to try again.\n        </p>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '5cbb87aef27f9b4333ebebc944ad48bd';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const fetchMovieTrendingList = async signal => {\n  const response = await axios.get('/trending/movie/day', { signal });\n\n  return response.data.results;\n};\n\nexport const fetchMovieSearch = async (q, signal) => {\n  const response = await axios.get(`/search/movie?query=${q}`, { signal });\n\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async (id, signal) => {\n  const response = await axios.get(`/movie/${id}`, { signal });\n\n  return response.data;\n};\n\nexport const fetchMovieCast = async (id, signal) => {\n  const response = await axios.get(`/movie/${id}/credits`, { signal });\n\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async (id, signal) => {\n  const response = await axios.get(`/movie/${id}/reviews`, { signal });\n\n  return response.data.results;\n};\n"],"names":["Wrapper","styled","movieId","useParams","useState","reviews","setReviews","status","setStatus","setError","useEffect","controller","AbortController","signal","fetchMovieReviews","Number","data","name","message","abort","map","id","author","content","length","axios","api_key","language","fetchMovieTrendingList","response","results","fetchMovieSearch","q","fetchMovieDetails","fetchMovieCast","cast"],"sourceRoot":""}