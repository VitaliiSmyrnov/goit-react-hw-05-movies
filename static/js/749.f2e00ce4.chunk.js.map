{"version":3,"file":"static/js/749.f2e00ce4.chunk.js","mappings":"yOAiDA,UA5Ca,WACX,OAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KA4BA,OA1BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACfC,EAAWF,EAAXE,OAmBR,OAjBA,iBAAC,2FACCN,EAAU,WADX,mBAIsBO,EAAAA,EAAAA,IAAuBD,GAJ7C,OAISE,EAJT,OAKGV,EAAaU,GACbR,EAAU,YANb,gDAQsB,kBAAf,KAAMS,OACRP,EACE,qEAEFF,EAAU,aAZf,wDAAD,GAiBO,WACLI,EAAWM,OACZ,CACF,GAAE,KAGD,iCACE,2CAEY,YAAXX,IAAwB,SAAC,KAAD,IAEb,aAAXA,IAAyB,SAAC,KAAD,CAAWY,MAAOd,IAEhC,aAAXE,IAAyB,SAAC,KAAD,CAASa,KAAMX,EAAOY,MAAOC,MAG5D,C,mMC5CDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAHc,mCAIdC,SAAU,SAGL,IAAMV,EAAsB,mCAAG,WAAMD,GAAN,uFACbS,EAAAA,EAAAA,IAAU,sBAAuB,CAAET,OAAAA,IADtB,cAC9BY,EAD8B,yBAG7BA,EAASV,KAAKW,SAHe,2CAAH,sDAMtBC,EAAgB,mCAAG,WAAOC,EAAGf,GAAV,uFACPS,EAAAA,EAAAA,IAAA,8BAAiCM,GAAK,CAAEf,OAAAA,IADjC,cACxBY,EADwB,yBAGvBA,EAASV,KAAKW,SAHS,2CAAH,wDAMhBG,EAAiB,mCAAG,WAAOC,EAAIjB,GAAX,uFACRS,EAAAA,EAAAA,IAAA,iBAAoBQ,GAAM,CAAEjB,OAAAA,IADpB,cACzBY,EADyB,yBAGxBA,EAASV,MAHe,2CAAH,wDAMjBgB,EAAc,mCAAG,WAAOD,EAAIjB,GAAX,uFACLS,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,YAAkC,CAAEjB,OAAAA,IAD/B,cACtBY,EADsB,yBAGrBA,EAASV,KAAKiB,MAHO,2CAAH,wDAMdC,EAAiB,mCAAG,WAAOH,EAAIjB,GAAX,uFACRS,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,YAAkC,CAAEjB,OAAAA,IAD5B,cACzBY,EADyB,yBAGxBA,EAASV,KAAKW,SAHU,2CAAH,uD","sources":["page/Home/Home.jsx","services/Api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { MovieList, Loader, Message } from 'components';\nimport { fetchMovieTrendingList } from 'services/Api';\nimport MovieApiError from 'assets/something-wrong-min.png';\n\nconst Home = () => {\n  const [movieList, setMovieList] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const { signal } = controller;\n\n    (async () => {\n      setStatus('pending');\n\n      try {\n        const data = await fetchMovieTrendingList(signal);\n        setMovieList(data);\n        setStatus('resolved');\n      } catch (error) {\n        if (error.name !== 'CanceledError') {\n          setError(\n            'Oops, something went wrong. Please, reload the page to try again.'\n          );\n          setStatus('rejected');\n        }\n      }\n    })();\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  return (\n    <>\n      <h2>Trending Today</h2>\n\n      {status === 'pending' && <Loader />}\n\n      {status === 'resolved' && <MovieList items={movieList} />}\n\n      {status === 'rejected' && <Message text={error} image={MovieApiError} />}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '5cbb87aef27f9b4333ebebc944ad48bd';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const fetchMovieTrendingList = async signal => {\n  const response = await axios.get('/trending/movie/day', { signal });\n\n  return response.data.results;\n};\n\nexport const fetchMovieSearch = async (q, signal) => {\n  const response = await axios.get(`/search/movie?query=${q}`, { signal });\n\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async (id, signal) => {\n  const response = await axios.get(`/movie/${id}`, { signal });\n\n  return response.data;\n};\n\nexport const fetchMovieCast = async (id, signal) => {\n  const response = await axios.get(`/movie/${id}/credits`, { signal });\n\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async (id, signal) => {\n  const response = await axios.get(`/movie/${id}/reviews`, { signal });\n\n  return response.data.results;\n};\n"],"names":["useState","movieList","setMovieList","status","setStatus","error","setError","useEffect","controller","AbortController","signal","fetchMovieTrendingList","data","name","abort","items","text","image","MovieApiError","axios","api_key","language","response","results","fetchMovieSearch","q","fetchMovieDetails","id","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}